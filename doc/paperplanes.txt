*paperplanes* Send snippets to online services

>
                                              /
         __    __    __    __    __     __   /  __    __    __   __
       /   ) /   ) /   ) /___) /   )  /   ) / /   ) /   ) /___) (_ `
      /   / (‾‾‾( /   / (___  /      /   / / (‾‾‾( /   / (___  (__)
     /           /                  /
    /           /                  /

=====================================================*paperplanes* *paperplanes-toc*

Purpose .................................................... |paperplanes-purpose|
Install & Setup ...................................... |paperplanes-install-setup|
Usage ........................................................ |paperplanes-usage|
Command .................................................... |paperplanes-command|
Functions ................................................ |paperplanes-functions|
  post_string .......................................... |paperplanes-post-string|
  post_range ............................................ |paperplanes-post-range|
  post_selection .................................... |paperplanes-post-selection|
  post_buffer .......................................... |paperplanes-post-buffer|
Providers ................................................ |paperplanes-providers|

============================================================ *paperplanes-purpose*

Purpose ~

Send snippets from Neovim to online paste bins.

`paperplanes` provides a `:[range]PP` command, as well as a generalised API.

The `:[range]PP` command automatically sets a register if desired.

====================================================== *paperplanes-install-setup*

Install ~

Use your package manager.

Setup ~
>
require("paperplanes").setup({
  register = "+",
  provider = "0x0.st",
  provider_options = {},
  notifier = vim.notify or print,
})
```

- `register` - any valid register name or false
- `provider` - see |paperplanes-providers|
- `provider_options` - passed to selected provider, check provider to know if
                       you need to use this option. Not all providers are option
                       aware.
- `notifier` - any function that accepts a string, should show that string in some way.

============================================================== *paperplanes-usage*

Usage ~

`paperplanes` provides one command, `:PP` and a number of functions for mapping.

============================================================ *paperplanes-command*

Command ~
>
  :PP -> Post entire current buffer, prints URL and sets desired register.

  :[range]PP -> Post selected range, prints URL and sets desired register.

Note: Vim does not allow column specification from the command line, so
      [range] is linewise only.

========================================================== *paperplanes-functions*

Functions ~

Note: Functions are provided in `snake_case` and `kebab-case`.

Note: All functions accept a `callback` argument which is called with
      `url, nil` or `nil, errors` .

Note: Functions to not automatically print the url or set any registers.

-------------------------------------------------------- *paperplanes-post-string*

`post_string(string, metadata, callback, provider-name, provider-options)`

Post given string.

`content`: string content to post.

`metadata`: file metadata table containing `path`, `filename`, `extension` and
`filetype`.

`callback`: function accepting `url_or_nil, err_or_nil`.

`provider-name`: (optional) any valid provider name, if not given, default
provider is used.

`provider-options`: (optional) table of options for provider. If provider-name
is the same as the default provider, the default options are used.

--------------------------------------------------------- *paperplanes-post-range*

`post_range(buffer, start_pos, end_pos, callback, provider-name, provider-options)`

Post given range.

`start_pos` & `end_pos` may be `line` or `[line, column]` .

`provider-name` and `provider-options` are optional.

----------------------------------------------------- *paperplanes-post-selection*

`post_selection(callback, provider-name, provider-options)`

Post current selection.

`provider-name` and `provider-options` are optional.

-------------------------------------------------------- *paperplanes-post-buffer*

`post_buffer(buffer, callback, provider-name, provider-options)`

Post given buffer.

`buffer` is any valid buffer id.

`provider-name` and `provider-options` are optional.

========================================================== *paperplanes-providers*

Providers ~

`paperplanes` supports the following providers, see sites for TOS and features.

- https://0x0.st
- https://paste.sr.ht
- https://gist.github.com
- https://dpaste.org
- https://paste.rs
- https://ray.so
- https://mystb.in
- http://ix.io (HTTP ONLY)
- http://sprunge.us (HTTP ONLY)

See `fnl/paperplanes/providers/*.fnl` for examples to add your own provider.

